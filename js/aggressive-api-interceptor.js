// js/aggressive-api-interceptor.js
// –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ API –∑–∞–ø—Ä–æ—Å–æ–≤

console.log('[AGGRESSIVE-API-INTERCEPTOR] Starting...');

// –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º fetch –î–û —Ç–æ–≥–æ –∫–∞–∫ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
const originalFetch = window.fetch;

window.fetch = async function(input, init) {
    const url = (typeof input === 'string') ? input : (input && input.url) || '';
    
    console.log('[AGGRESSIVE-API-INTERCEPTOR] Fetch request:', url);
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ condor.pickawood.com
    if (url.includes('condor.pickawood.com/configuration')) {
        console.log('[AGGRESSIVE-API-INTERCEPTOR] üéØ INTERCEPTING condor request:', url);
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            const response = await originalFetch('/wardrobe_config_rubles.json', {
                method: 'GET',
                credentials: 'same-origin'
            });
            
            if (response.ok) {
                const config = await response.json();
                console.log('[AGGRESSIVE-API-INTERCEPTOR] ‚úÖ Returning local wardrobe config');
                
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π Response —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                return new Response(JSON.stringify(config), {
                    status: 200,
                    statusText: 'OK',
                    headers: {
                        'Content-Type': 'application/json; charset=utf-8',
                        'Access-Control-Allow-Origin': '*',
                        'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
                        'Access-Control-Allow-Headers': 'Content-Type, Authorization'
                    }
                });
            } else {
                console.error('[AGGRESSIVE-API-INTERCEPTOR] Failed to load local config:', response.status);
            }
        } catch (error) {
            console.error('[AGGRESSIVE-API-INTERCEPTOR] Error loading local config:', error);
        }
    }
    
    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
    return originalFetch(input, init);
};

// –¢–∞–∫–∂–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º XMLHttpRequest
const originalXHR = window.XMLHttpRequest;

window.XMLHttpRequest = function() {
    const xhr = new originalXHR();
    const originalOpen = xhr.open;
    const originalSend = xhr.send;
    
    xhr.open = function(method, url, ...args) {
        this._method = method;
        this._url = url;
        console.log('[AGGRESSIVE-API-INTERCEPTOR] XHR open:', method, url);
        return originalOpen.apply(this, [method, url, ...args]);
    };
    
    xhr.send = function(body) {
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ condor.pickawood.com
        if (this._url && this._url.includes('condor.pickawood.com/configuration')) {
            console.log('[AGGRESSIVE-API-INTERCEPTOR] üéØ INTERCEPTING XHR condor request:', this._url);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            originalFetch('/wardrobe_config_rubles.json', {
                method: 'GET',
                credentials: 'same-origin'
            })
            .then(response => response.json())
            .then(config => {
                console.log('[AGGRESSIVE-API-INTERCEPTOR] ‚úÖ Returning local wardrobe config via XHR');
                
                // –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
                Object.defineProperty(this, 'readyState', { value: 4, writable: false });
                Object.defineProperty(this, 'status', { value: 200, writable: false });
                Object.defineProperty(this, 'statusText', { value: 'OK', writable: false });
                Object.defineProperty(this, 'responseText', { value: JSON.stringify(config), writable: false });
                Object.defineProperty(this, 'response', { value: JSON.stringify(config), writable: false });
                
                // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                if (this.onreadystatechange) this.onreadystatechange();
                if (this.onload) this.onload();
            })
            .catch(error => {
                console.error('[AGGRESSIVE-API-INTERCEPTOR] Error loading local config for XHR:', error);
                // Fallback –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É
                return originalSend.apply(this, arguments);
            });
            
            return;
        }
        
        return originalSend.apply(this, arguments);
    };
    
    return xhr;
};

console.log('[AGGRESSIVE-API-INTERCEPTOR] Ready - intercepting condor.pickawood.com requests');
