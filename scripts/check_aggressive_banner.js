const puppeteer = require('puppeteer');

async function checkAggressiveBanner() {
    console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞ ===');
    
    const browser = await puppeteer.launch({ 
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    try {
        const page = await browser.newPage();
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        page.on('console', msg => {
            if (msg.text().includes('AGGRESSIVE-SHOW-BANNER') || msg.text().includes('banner')) {
                console.log('Console:', msg.text());
            }
        });
        
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        await page.goto('http://localhost:8000/configurator_2508f3617e1046cba5b985f3a7ea393a_page.html', {
            waitUntil: 'domcontentloaded',
            timeout: 30000
        });
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
        await page.waitForTimeout(8000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –±–∞–Ω–Ω–µ—Ä—ã
        const bannerInfo = await page.evaluate(() => {
            const banners = document.querySelectorAll('[class*="banner"], [id*="banner"]');
            const results = [];
            
            banners.forEach((banner, index) => {
                const computedStyle = window.getComputedStyle(banner);
                results.push({
                    index: index + 1,
                    id: banner.id,
                    className: banner.className,
                    text: banner.textContent.trim().substring(0, 100),
                    visible: banner.offsetParent !== null,
                    display: computedStyle.display,
                    visibility: computedStyle.visibility,
                    opacity: computedStyle.opacity,
                    zIndex: computedStyle.zIndex,
                    position: computedStyle.position
                });
            });
            
            return results;
        });
        
        console.log('\nüìã –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–Ω–Ω–µ—Ä—ã:');
        if (bannerInfo.length > 0) {
            bannerInfo.forEach(banner => {
                console.log(`   ${banner.index}. ID: ${banner.id || '–Ω–µ—Ç'}`);
                console.log(`      –ö–ª–∞—Å—Å: ${banner.className}`);
                console.log(`      –í–∏–¥–∏–º—ã–π: ${banner.visible}`);
                console.log(`      Display: ${banner.display}`);
                console.log(`      Visibility: ${banner.visibility}`);
                console.log(`      Opacity: ${banner.opacity}`);
                console.log(`      Z-index: ${banner.zIndex}`);
                console.log(`      Position: ${banner.position}`);
                console.log(`      –¢–µ–∫—Å—Ç: ${banner.text}`);
                console.log('');
            });
        } else {
            console.log('   ‚ùå –ë–∞–Ω–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä
        const aggressiveBanner = await page.evaluate(() => {
            const banner = document.querySelector('#aggressive-special-offer-banner');
            if (banner) {
                const computedStyle = window.getComputedStyle(banner);
                return {
                    found: true,
                    visible: banner.offsetParent !== null,
                    display: computedStyle.display,
                    visibility: computedStyle.visibility,
                    opacity: computedStyle.opacity,
                    text: banner.textContent.trim().substring(0, 100)
                };
            }
            return { found: false };
        });
        
        console.log('\nüìã –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä:');
        if (aggressiveBanner.found) {
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω!`);
            console.log(`   –í–∏–¥–∏–º—ã–π: ${aggressiveBanner.visible}`);
            console.log(`   Display: ${aggressiveBanner.display}`);
            console.log(`   Visibility: ${aggressiveBanner.visibility}`);
            console.log(`   Opacity: ${aggressiveBanner.opacity}`);
            console.log(`   –¢–µ–∫—Å—Ç: ${aggressiveBanner.text}`);
        } else {
            console.log('   ‚ùå –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –±–∞–Ω–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∏–ª–∏ body
        const bodyStyles = await page.evaluate(() => {
            const body = document.body;
            const computedStyle = window.getComputedStyle(body);
            return {
                paddingTop: computedStyle.paddingTop,
                marginTop: computedStyle.marginTop
            };
        });
        
        console.log('\nüìã –°—Ç–∏–ª–∏ body:');
        console.log(`   Padding-top: ${bodyStyles.paddingTop}`);
        console.log(`   Margin-top: ${bodyStyles.marginTop}`);
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        await page.screenshot({ path: 'banner_check.png', fullPage: true });
        console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ banner_check.png');
        
        console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error.message);
    } finally {
        await browser.close();
    }
}

checkAggressiveBanner().catch(console.error);




