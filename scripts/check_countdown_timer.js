const puppeteer = require('puppeteer');

async function checkCountdownTimer() {
    console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ ===');
    
    const browser = await puppeteer.launch({ 
        headless: true,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    try {
        const page = await browser.newPage();
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        page.on('console', msg => {
            if (msg.text().includes('ADD-COUNTDOWN-TIMER') || msg.text().includes('countdown')) {
                console.log('Console:', msg.text());
            }
        });
        
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
        await page.goto('http://localhost:8000/configurator_2508f3617e1046cba5b985f3a7ea393a_page.html', {
            waitUntil: 'domcontentloaded',
            timeout: 30000
        });
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤
        await page.waitForTimeout(8000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–π–º–µ—Ä–∞
        const countdownInfo = await page.evaluate(() => {
            const countdownTimer = document.querySelector('.simple-countdown-timer') || 
                                  document.querySelector('.countdown-timer');
            if (countdownTimer) {
                const computedStyle = window.getComputedStyle(countdownTimer);
                return {
                    found: true,
                    visible: countdownTimer.offsetParent !== null,
                    display: computedStyle.display,
                    text: countdownTimer.textContent.trim(),
                    days: countdownTimer.querySelector('.countdown-days')?.textContent,
                    hours: countdownTimer.querySelector('.countdown-hours')?.textContent,
                    minutes: countdownTimer.querySelector('.countdown-minutes')?.textContent,
                    seconds: countdownTimer.querySelector('.countdown-seconds')?.textContent
                };
            }
            return { found: false };
        });
        
        console.log('\nüìã –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞:');
        if (countdownInfo.found) {
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω!`);
            console.log(`   –í–∏–¥–∏–º—ã–π: ${countdownInfo.visible}`);
            console.log(`   Display: ${countdownInfo.display}`);
            console.log(`   –¢–µ–∫—Å—Ç: ${countdownInfo.text}`);
            console.log(`   –î–Ω–∏: ${countdownInfo.days}`);
            console.log(`   –ß–∞—Å—ã: ${countdownInfo.hours}`);
            console.log(`   –ú–∏–Ω—É—Ç—ã: ${countdownInfo.minutes}`);
            console.log(`   –°–µ–∫—É–Ω–¥—ã: ${countdownInfo.seconds}`);
        } else {
            console.log('   ‚ùå –¢–∞–π–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É—Ç–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞
        const footerInfo = await page.evaluate(() => {
            const footer = document.querySelector('.configurator-footer') ||
                          document.querySelector('[class*="footer"]') ||
                          document.querySelector('[class*="cart"]') ||
                          document.querySelector('[class*="price"]');
            
            if (footer) {
                return {
                    found: true,
                    className: footer.className,
                    text: footer.textContent.trim().substring(0, 200),
                    visible: footer.offsetParent !== null
                };
            }
            return { found: false };
        });
        
        console.log('\nüìã –§—É—Ç–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä–∞:');
        if (footerInfo.found) {
            console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω!`);
            console.log(`   –ö–ª–∞—Å—Å: ${footerInfo.className}`);
            console.log(`   –í–∏–¥–∏–º—ã–π: ${footerInfo.visible}`);
            console.log(`   –¢–µ–∫—Å—Ç: ${footerInfo.text}`);
        } else {
            console.log('   ‚ùå –§—É—Ç–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
        await page.screenshot({ path: 'countdown_check.png', fullPage: true });
        console.log('\nüì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ countdown_check.png');
        
        console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error.message);
    } finally {
        await browser.close();
    }
}

checkCountdownTimer().catch(console.error);
